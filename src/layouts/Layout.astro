---
import Header from '../components/Header.astro';
import '../styles/globals.css';
export interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <script is:inline>
        // Set theme from localStorage or default to dark
        if (localStorage.getItem('theme') === 'light' || (!('theme' in localStorage))) {
            document.documentElement.classList.remove('dark');
        } else {
            document.documentElement.classList.add('dark');
        }
        // Default to dark if no setting is found
        if (!('theme' in localStorage)) {
            localStorage.setItem('theme', 'dark');
            document.documentElement.classList.add('dark');
        }
    </script>
</head>
<body class="bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200">
    <Header />
    <main>
        <slot />
    </main>
    <script>
        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', (e) => {
                e.preventDefault();
                const href = anchor.getAttribute('href');
                if (!href) return;
                const targetElement = document.querySelector(href);
                if (targetElement) {
                    targetElement.scrollIntoView({
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Theme toggle logic
        const themeToggleBtn = document.getElementById('theme-toggle');
        const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
        const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

        // Function to set the icon visibility
        function setIconVisibility() {
            if (localStorage.getItem('theme') === 'dark') {
                themeToggleDarkIcon?.classList.remove('hidden');
                themeToggleLightIcon?.classList.add('hidden');
            } else {
                themeToggleDarkIcon?.classList.add('hidden');
                themeToggleLightIcon?.classList.remove('hidden');
            }
        }

        // Set initial icon visibility
        setIconVisibility();

        themeToggleBtn?.addEventListener('click', () => {
            // toggle theme
            if (localStorage.getItem('theme') === 'dark') {
                localStorage.setItem('theme', 'light');
                document.documentElement.classList.remove('dark');
            } else {
                localStorage.setItem('theme', 'dark');
                document.documentElement.classList.add('dark');
            }
            // update icon
            setIconVisibility();
        });
    </script>
</body>
</html>